[{"/home/oskaragh/stremingly/frontend/src/index.js":"1","/home/oskaragh/stremingly/frontend/src/App.js":"2","/home/oskaragh/stremingly/frontend/src/components/Player.js":"3","/home/oskaragh/stremingly/frontend/src/components/Body.js":"4","/home/oskaragh/stremingly/frontend/src/components/Sidebar.js":"5","/home/oskaragh/stremingly/frontend/src/context/PlayerState.js":"6","/home/oskaragh/stremingly/frontend/src/context/PlayerContext.js":"7","/home/oskaragh/stremingly/frontend/src/context/Reducer.js":"8","/home/oskaragh/stremingly/frontend/src/components/SidebarOption.js":"9","/home/oskaragh/stremingly/frontend/src/context/tables.js":"10","/home/oskaragh/stremingly/frontend/src/components/Songlist.js":"11","/home/oskaragh/stremingly/frontend/src/context/Types.js":"12"},{"size":198,"mtime":1669057975750,"results":"13","hashOfConfig":"14"},{"size":676,"mtime":1669058074927,"results":"15","hashOfConfig":"14"},{"size":2066,"mtime":1669058678936,"results":"16","hashOfConfig":"14"},{"size":2182,"mtime":1669058502192,"results":"17","hashOfConfig":"14"},{"size":422,"mtime":1669058734884,"results":"18","hashOfConfig":"14"},{"size":1402,"mtime":1669058236959,"results":"19","hashOfConfig":"14"},{"size":113,"mtime":1669047011395,"results":"20","hashOfConfig":"14"},{"size":586,"mtime":1669058235799,"results":"21","hashOfConfig":"14"},{"size":314,"mtime":1668539235000,"results":"22","hashOfConfig":"14"},{"size":412,"mtime":1669050685455,"results":"23","hashOfConfig":"14"},{"size":279,"mtime":1669058782671,"results":"24","hashOfConfig":"14"},{"size":138,"mtime":1669058115079,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"314llr",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/oskaragh/stremingly/frontend/src/index.js",[],"/home/oskaragh/stremingly/frontend/src/App.js",[],"/home/oskaragh/stremingly/frontend/src/components/Player.js",["54","55","56","57"],"import React,   { useState, useEffect, useRef, useContext } from \"react\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport \"./Player.css\";\r\nimport PlayerContext from '../context/PlayerContext'\r\nimport axios from 'axios'\r\n\r\nfunction Player(props) {\r\n  const {\r\n    currentSong,\r\n    songs,\r\n    playing,\r\n    togglePlaying,\r\n    handleEnd,\r\n    setAlbum\r\n    \r\n\r\n  } = useContext(PlayerContext)\r\n\r\n  const audio = useRef('audio_tag');\r\n\r\n  const [statevolum] = useState(0.3)\r\n  const [dur, setDur] = useState(0)\r\n\r\n  const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        \"http://localhost:3000/api/albums?limit=1000&offset=0\",\r\n      );\r\n \r\n      setAlbum(result.data);\r\n      \r\n    };\r\n \r\n    fetchData();\r\n  },[]);\r\n\r\n\r\n  useEffect(() => {\r\n    audio.current.volume = statevolum;\r\n    if (playing) { toggleAudio() }\r\n  }, [currentSong])\r\n\r\n\r\n\r\n  {\r\n    if (typeof songs[currentSong].artists !== 'undefined' && typeof songs[currentSong].genres !== 'undefined' ){ \r\n\r\n   \r\n\r\n    return (\r\n\r\n  \r\n\r\n    <div className=\"footer\">\r\n       \r\n    <audio \r\n    onCanPlay={(e) => setDur(e.target.duration)}\r\n    onEnded={handleEnd}\r\n    ref={audio}\r\n    type=\"audio/mpeg\"\r\n    preload='true'\r\n    src={\"http://localhost:3000/media/\"+songs[currentSong].media}\r\n    />\r\n       \r\n\r\n      <div className=\"footer__center\">\r\n        {playing ? (\r\n          <PauseCircleOutlineIcon\r\n          onClick={() => { togglePlaying(); toggleAudio(); }}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon__play\"\r\n          />\r\n        ) : (\r\n          <PlayCircleOutlineIcon\r\n          onClick={() => { togglePlaying(); toggleAudio(); }}\r\n            fontSize=\"large\"\r\n            className=\"footer__icon__play\"\r\n          />\r\n        )}\r\n \r\n        \r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n} \r\n}\r\nexport default Player\r\n","/home/oskaragh/stremingly/frontend/src/components/Body.js",["58","59","60"],"import React, { useContext, useEffect } from 'react'\r\nimport \"./Body.css\";\r\nimport playerContext from '../context/PlayerContext'\r\nimport axios from 'axios'\r\nimport Songlist from './Songlist'\r\n\r\n\r\n\r\nfunction Body() {\r\n\r\n  const { SetCurrent, currentSong, songs,setArtist, artists, setSongs } = useContext(playerContext)\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        \"http://localhost:3000/api/songs?limit=4&offset=0?limit=4&offset=0\",\r\n      );\r\n \r\n      setSongs(result.data);\r\n    \r\n    };\r\n \r\n    fetchData();\r\n  },[]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        \"http://localhost:3000/api/albums?limit=4&offset=0\",\r\n      );\r\n      setArtist(result.data);\r\n    };\r\n \r\n    fetchData();\r\n  },[]);\r\n    return (\r\n        <div className=\"body\">\r\n        <div className=\"body__info\">\r\n         \r\n          <div className=\"body__infoText\">\r\n            <strong>Library</strong>\r\n          </div>\r\n        </div>\r\n \r\n        <div className=\"body__songs\">\r\n          \r\n    \r\n          { \r\n          \r\n          songs.map((song, i)=>{\r\n            const artistIneed = artists.find(\r\n              (artist) => artist.id === song.album_id\r\n              ) \r\n\r\n              if (typeof song.artists !== 'undefined' && typeof song.genres !== 'undefined' ){ \r\n                const newArtist = song.artists.toString().replace(/[0-9]/g, '').replace(',',' ');\r\n                const newGenre = song.genres.toString().replace(/[0-9]/g, '').replace(',',' ').replace(',,',' ').replace(',,',' ');\r\n              if (typeof artistIneed !== 'undefined'){\r\n            return (\r\n              \r\n              \r\n                <div className={'songContainer ' + (currentSong === i ? 'selected1' : '')} key={song.id} onClick={() => { SetCurrent(i); }}>\r\n                <Songlist key = {i} title ={song.title} artist = {newArtist} genre = {newGenre}/>                \r\n              </div>\r\n             \r\n            );\r\n          }\r\n              }})\r\n\r\n\r\n          }\r\n          \r\n         \r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\nexport default Body\r\n","/home/oskaragh/stremingly/frontend/src/components/Sidebar.js",["61","62","63","64"],"import React, { useContext } from 'react'\r\nimport \"./Sidebar.css\";\r\nimport playerContext from '../context/PlayerContext'\r\n\r\n\r\nfunction Sidebar() {\r\n  const { SetCurrent, currentSong,songs, setPlayingFalse } = useContext(playerContext)\r\n\r\n  \r\n\r\n    return (\r\n\r\n      <div className=\"sidebar\">\r\n        <div  className=\"sidebar__title\" ><h2>Streamingly</h2></div>\r\n      </div> \r\n    );\r\n  }\r\n  \r\n  export default Sidebar;\r\n","/home/oskaragh/stremingly/frontend/src/context/PlayerState.js",[],"/home/oskaragh/stremingly/frontend/src/context/PlayerContext.js",[],"/home/oskaragh/stremingly/frontend/src/context/Reducer.js",["65"],"import {\r\n    SET_CURRENT_SONG,\r\n    TOGGLE_PLAYING,\r\n    SET_SONGS,\r\n\r\n  } from './Types'\r\n  \r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n      case SET_CURRENT_SONG:\r\n        return {\r\n          ...state,\r\n          currentSong: action.data,\r\n          playing: true\r\n        }\r\n      case TOGGLE_PLAYING:\r\n        return {\r\n          ...state,\r\n          playing: action.data\r\n        }\r\n      case SET_SONGS: \r\n        return {\r\n          ...state,\r\n          songs: action.data,\r\n          \r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  \r\n  }\r\n  ","/home/oskaragh/stremingly/frontend/src/components/SidebarOption.js",[],"/home/oskaragh/stremingly/frontend/src/context/tables.js",[],"/home/oskaragh/stremingly/frontend/src/components/Songlist.js",[],"/home/oskaragh/stremingly/frontend/src/context/Types.js",[],{"ruleId":"66","severity":1,"message":"67","line":23,"column":10,"nodeType":"68","messageId":"69","endLine":23,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":39,"column":5,"nodeType":"72","endLine":39,"endColumn":7,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":45,"column":6,"nodeType":"72","endLine":45,"endColumn":19,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":49,"column":3,"nodeType":"78","messageId":"79","endLine":90,"endColumn":2},{"ruleId":"70","severity":1,"message":"80","line":26,"column":5,"nodeType":"72","endLine":26,"endColumn":7,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"82","line":36,"column":5,"nodeType":"72","endLine":36,"endColumn":7,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":51,"column":30,"nodeType":"86","messageId":"87","endLine":51,"endColumn":32},{"ruleId":"66","severity":1,"message":"88","line":7,"column":11,"nodeType":"68","messageId":"69","endLine":7,"endColumn":21},{"ruleId":"66","severity":1,"message":"89","line":7,"column":23,"nodeType":"68","messageId":"69","endLine":7,"endColumn":34},{"ruleId":"66","severity":1,"message":"90","line":7,"column":35,"nodeType":"68","messageId":"69","endLine":7,"endColumn":40},{"ruleId":"66","severity":1,"message":"91","line":7,"column":42,"nodeType":"68","messageId":"69","endLine":7,"endColumn":57},{"ruleId":"92","severity":1,"message":"93","line":8,"column":1,"nodeType":"94","endLine":31,"endColumn":4},"no-unused-vars","'dur' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAlbum'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'playing' and 'statevolum'. Either include them or remove the dependency array.",["96"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'setSongs'. Either include it or remove the dependency array.",["97"],"React Hook useEffect has a missing dependency: 'setArtist'. Either include it or remove the dependency array.",["98"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'SetCurrent' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'songs' is assigned a value but never used.","'setPlayingFalse' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [setAlbum]",{"range":"107","text":"108"},"Update the dependencies array to be: [currentSong, playing, statevolum]",{"range":"109","text":"110"},"Update the dependencies array to be: [setSongs]",{"range":"111","text":"112"},"Update the dependencies array to be: [setArtist]",{"range":"113","text":"114"},[969,971],"[setAlbum]",[1081,1094],"[currentSong, playing, statevolum]",[583,585],"[setSongs]",[818,820],"[setArtist]"]